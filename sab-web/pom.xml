<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
  http://maven.apache.org/maven-v4_0_0.xsd">
  
	<parent>
        <groupId>com.gamasoft.base</groupId>
        <artifactId>sab</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.gamasoft.base</groupId>
    <artifactId>sab-web</artifactId>
    <version>${sab-web-version}</version>
    <packaging>war</packaging>
    <name>Sab - web</name>
	
	<profiles>
          <profile>
                 <id>default-profile</id>
                 <activation>
                       <activeByDefault>true</activeByDefault>
                       <file>
                              <exists>${java.home}/../lib/tools.jar</exists>
                       </file>
                 </activation>
                 <properties>
                       <toolsjar>${java.home}/../lib/tools.jar</toolsjar>
                 </properties>
          </profile>
          <profile>
                 <id>mac-profile</id>
                 <activation>
                       <activeByDefault>false</activeByDefault>
                       <file>
                              <exists>${java.home}/../Classes/classes.jar</exists>
                       </file>
                 </activation>
                 <properties>
                       <toolsjar>${java.home}/../Classes/classes.jar</toolsjar>
                 </properties>
        </profile>
	</profiles>

<scm>
	<connection>scm:svn:http://...</connection>
	<developerConnection>scm:svn:http://...</developerConnection>
	<url>http://...</url>
</scm>    

    <dependencies>
        <dependency>
            <groupId>hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jsp-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
        <dependency>
            <groupId>com.gamasoft.base</groupId>
            <artifactId>sab-core</artifactId>
            <version>${sab-core-version}</version>
        </dependency>
        <dependency>
            <groupId>com.gamasoft.base</groupId>
            <artifactId>sab-config</artifactId>
            <version>${sab-config-version}</version>
        </dependency>
        <dependency>
            <groupId>c3p0</groupId>
            <artifactId>c3p0</artifactId>
            <version>0.9.1.2</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymockclassextension</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.5</version>
        </dependency>
    
        <!-- DASHBOARD DEPENDENCIES TEST -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
        </dependency>
        <!-- MySQL database driver -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.5</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>3.6.0.Final</version>
        </dependency>
        <dependency>
            <groupId>javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>3.12.1.GA</version>
        </dependency>
                <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2.1</version>
        </dependency>
        <dependency>
	        <groupId>com.mangofactory</groupId>
	        <artifactId>swagger-springmvc</artifactId>
	        <version>0.6.5</version>
    	</dependency>
        <!-- END DASHBOARD DEPENDENCIES TEST -->
    </dependencies>

    <build>
        <finalName>sab</finalName>
        <plugins>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>tomcat-maven-plugin</artifactId>
                <configuration>
                    <url>http://localhost:8080/manager</url>
                    <server>TomcatServer</server>
                    <path>/sab-web/main</path>
                    <argLine>-Xmx1024m</argLine>
                </configuration>
            </plugin>
      
            <!-- Starts tomcat and deploys the web application in it, listening at port 8089. The plugin is 
            also bounded to the pre-integration-test and post-integration-test phase to start and stop the deployed 
            application to run the integration tests. -->
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <version>1.0</version>

                <executions>
                    <!-- execution>
                      <id>start-container</id>
                      <phase>pre-integration-test</phase>
                      <goals>
                        <goal>start</goal>
                      </goals>
                      <configuration>
                        <wait>false</wait>
                        <configuration>
                          <home>${project.build.directory}/tmp/cargo</home>
                          <properties>
                            <reloadable>true</reloadable>
                            <cargo.servlet.port>8089</cargo.servlet.port>
                          </properties>
                          <deployables>
                            <deployable>
                              <groupId>${project.groupId}</groupId>
                              <artifactId>${project.artifactId}</artifactId>
                              <type>war</type>
                            </deployable>
                          </deployables>
                        </configuration>
                      </configuration>
                    </execution -->
                    <!-- Stops the container after the integration tests -->
                    <!-- execution>
                      <id>stop-container</id>
                      <phase>post-integration-test</phase>
                      <goals>
                        <goal>stop</goal>
                      </goals>
                      <configuration>
                        <wait>true</wait>
                        <configuration>
                          <home>${project.build.directory}/tmp/cargo</home>
                          <properties>
                            <cargo.servlet.port>8089</cargo.servlet.port>
                          </properties>
                        </configuration>
                      </configuration>
                    </execution -->
                </executions>

                <configuration>
                    <container>
                        <containerId>tomcat5x</containerId>
                        <zipUrlInstaller>
                            <url>http://katari.globant.com/nexus/content/repositories/tools/com/globant/tools/apache-tomcat/5.5.17/apache-tomcat-5.5.28.zip</url>
                        </zipUrlInstaller>
                        <systemProperties>
                            <!-- Hopefully avoids a java.util.ConcurrentModificationException when tomcat shuts down. -->
                            <org.apache.catalina.loader.WebappClassLoader.ENABLE_CLEAR_REFERENCES>
                                false
                            </org.apache.catalina.loader.WebappClassLoader.ENABLE_CLEAR_REFERENCES>
                        </systemProperties>
                        <dependencies>
                            <dependency>
                                <location>${basedir}/target/test-classes</location>
                            </dependency>
                        </dependencies>
                    </container>
                    <configuration>
                        <properties>
                            <cargo.servlet.port>8089</cargo.servlet.port>
                        </properties>
                    </configuration>
                </configuration>
            </plugin>
      
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <!-- dependencies>
                    <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-orm</artifactId>
                        <version>3.1.1.RELEASE</version>
                    </dependency>
                    <dependency>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate-core</artifactId>
                        <version>3.6.0.Final</version>
                    </dependency>
                </dependencies -->
                <configuration>
                    <!-- contextHandlers>
                        <contextHandler implementation="org.eclipse.jetty.webapp.WebAppContext">
                            <war>${basedir}/target/sab-web-${sab-web-version}.war</war>
                            <contextPath>/sab-web</contextPath> 
                            <extraClasspath>${basedir}/src/test/resources/properties</extraClasspath>  
                        </contextHandler>
                    </contextHandlers -->
                    <webApp>
                      <contextPath>/sab</contextPath>
                    </webApp>
                    <connectors>
                        <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                            <port>8090</port>
                            <maxIdleTime>60000</maxIdleTime>
                        </connector>
                    </connectors>
                    <reload>manual</reload>
                </configuration>
            </plugin>

            <!-- Generates the ddl file. -->
            <!-- Tried using maven groovy plugin, but it threw an error with mvn jetty:run. -->
            <!-- plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>exec-maven-plugin</artifactId>
              <executions>
                <execution>
                  <phase>compile</phase>
                  <goals>
                    <goal>java</goal>
                  </goals>
                </execution>
              </executions>
              <configuration>
                <classpathScope>test</classpathScope>
                <cleanupDaemonThreads>false</cleanupDaemonThreads>
                <keepAlive>false</keepAlive>
                <mainClass>com.globant.katari.tools.HibernateUtils</mainClass>
                <arguments>
                  <argument> file:///${project.basedir}/src/main/webapp/WEB-INF/applicationContext.xml,
                    classpath:/com/globant/katari/tools/dummyDataSourceContext.xml
                  </argument>
                  <argument>${project.basedir}/target/base-project.ddl</argument>
                </arguments>
              </configuration>
            </plugin -->

            <!-- plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>properties-maven-plugin</artifactId>
              <version>1.0-alpha-2</version>
              <executions>
                <execution>
                  <phase>initialize</phase>
                  <goals>
                    <goal>read-project-properties</goal>
                  </goals>
                  <configuration>
                    <files>
                      <file>${basedir}/src/test/resources/base-project.properties</file>
                    </files>
                    <quiet>true</quiet>
                  </configuration>
                </execution>
              </executions>
            </plugin -->
            <!-- plugin>
              <groupId>com.googlecode.flyway</groupId>
              <artifactId>flyway-maven-plugin</artifactId>
              <version>1.7</version>
              <configuration>
                <driver>com.mysql.jdbc.Driver</driver>
                <url>${dataSource.jdbcUrl}</url>
                <user>${dataSource.user}</user>
                <password>${dataSource.password}</password>
              </configuration>
              <executions>
                <execution>
                  <id>execution1</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                    <goal>migrate</goal>
                  </goals>
                </execution>
              </executions>
              <dependencies>
                <dependency>
                  <groupId>com.googlecode.flyway</groupId>
                  <artifactId>flyway-core</artifactId>
                  <version>1.7</version>
                </dependency>
              </dependencies>
            </plugin -->
        </plugins>

    </build>

</project>
